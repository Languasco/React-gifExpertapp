{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","services/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","type","value","onChange","e","target","onKeyDown","key","preventDefault","trim","length","alert","cat","GifGridItem","id","title","url","className","src","alt","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","useFetchGif","imagenes","GifExpertApp","categorias","setCategorias","ReactDOM","render","document","getElementById"],"mappings":"mMA4CeA,EAzCK,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,cAEnB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAuBA,OACG,+BACI,uBACEC,KAAK,OACLC,MAAQH,EACRI,SAzBgB,SAACC,GACtBJ,EAAcI,EAAEC,OAAOH,QAyBlBI,UArBW,SAACF,GACjB,GAAc,UAAVA,EAAEG,IAAiB,CAGnB,GAFAH,EAAEI,iBAE8B,IAA7BT,EAAWU,OAAOC,OAEjB,YADAC,MAAM,8BAGVd,GAAc,SAACe,GAAD,OAASb,GAAT,mBAAuBa,OAGrCZ,EAAc,W,QCtBba,EAAc,SAAC,GAAqB,EAApBC,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,IACpC,OACI,sBAAKC,UAAU,yCAAf,UACI,qBAAKC,IAAKF,EAAKG,IAAI,aACnB,4BAAIJ,Q,uBCLCK,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACbN,EADa,iDACoCO,UAAUF,GAD9C,8DAGDG,MAAMR,GAHL,cAGbS,EAHa,gBAIEA,EAAKC,OAJP,uBAIZC,EAJY,EAIZA,KAEDC,EAAOD,EAAKE,KAAI,SAACC,GACnB,MAAO,CACHhB,GAAIgB,EAAIhB,GACRC,MAAOe,EAAIf,MACXC,IAAMc,EAAIC,OAAOC,iBAAiBhB,QAVvB,kBAcZY,GAdY,4CAAH,sDC2BTK,EAtBC,SAAC,GAAgB,IAAfZ,EAAc,EAAdA,SAEf,ECLwB,SAACA,GAExB,MAA0BvB,mBAAS,CAC/B6B,KAAK,GACLO,SAAQ,IAFZ,mBAAOC,EAAP,KAAcC,EAAd,KAcA,OATAC,qBAAW,WACPjB,EAAQC,GAAUiB,MAAM,SAACV,GACrBQ,EAAS,CACLT,KAAKC,EACLM,SAAQ,SAGjB,CAAEb,IAEEc,EDX6BI,CAAYlB,GAAnCmB,EAAd,EAAQb,KAAiBO,EAAzB,EAAyBA,QAExB,OACI,qCACA,qBAAIjB,UAAU,yCAAd,cAA0DI,EAA1D,OACCa,GAAY,mBAAGjB,UAAU,wCAAb,6BAEb,qBAAKA,UAAU,YAAf,SAEQuB,EAASX,KAAI,SAACC,GAAD,OACT,cAAC,EAAD,eAAgCA,GAAbA,EAAIhB,aEU5B2B,EAxBM,WAEjB,MAAoC3C,mBAAS,CAAC,gBAA9C,mBAAO4C,EAAP,KAAmBC,EAAnB,KACA,OACG,gCACI,gDAEA,cAAC,EAAD,CAAc9C,cAAiB8C,IAC/B,uBACA,6BAESD,EAAWb,KAAI,SAACjB,GAAD,OACV,cAAC,EAAD,CAEGS,SAAYT,GADNA,Y,MCZlCgC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.18d7b16f.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AddCategory = ( {setCategories}  )=>{   //--- se esta obteniendo la informacion por referencia del anterior componente\r\n    // ---input todo lo que escribe el user---\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    //-- evento donde interactura el usuario +------\r\n    const handleInputChange =(e)=>{\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    //---- cuando presiona enter y se envia la informacion por referencia al otro componente ya modificada\r\n    const handleSubmit =(e)=>{   \r\n        if (e.key === 'Enter') {\r\n            e.preventDefault();\r\n\r\n            if(inputValue.trim().length === 0){\r\n                alert('Por favor ingrese un valor');\r\n                return ;\r\n            }\r\n            setCategories((cat)=> [inputValue,...cat]);\r\n            \r\n            //---- limpiando la caja de texto---\r\n            setInputValue('');\r\n        }\r\n    }\r\n\r\n    return (\r\n       <form >\r\n           <input \r\n             type=\"text\"\r\n             value= {inputValue}\r\n             onChange={handleInputChange}\r\n             onKeyDown = {handleSubmit}\r\n           /> \r\n       </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes ={\r\n    setCategories : PropTypes.func.isRequired\r\n}\r\n \r\nexport default AddCategory;","import React from 'react'\r\n\r\nexport const GifGridItem = ({id, title, url}) => {\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={url} alt='Imagenes' ></img>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","\r\n    export const getGifs = async(category)=>{\r\n        const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=5&api_key=v5CaIO7rFSLJUtZY5Q4PTdQGTp943SIm`;\r\n\r\n        const resp= await fetch(url);\r\n        const {data} = await resp.json();\r\n\r\n        const gifs = data.map((img)=>{\r\n            return {\r\n                id: img.id,\r\n                title: img.title,\r\n                url : img.images.downsized_medium.url\r\n            }\r\n        })\r\n\r\n        return gifs;        \r\n    }","import React  from 'react';\r\nimport { GifGridItem } from './GifGridItem';\r\nimport { useFetchGif } from '../hooks/useFetchGifs';\r\n \r\n\r\n\r\nconst GifGrid = ({category}) => {\r\n\r\n   const { data :imagenes , loading } = useFetchGif(category);\r\n\r\n    return (\r\n        <>\r\n        <h3 className=\"card animate__animated animate__fadeIn\" > {category} </h3>\r\n        {loading  && <p className=\"card animate__animated animate__flash\" > Cargando ...! </p>}\r\n\r\n        <div className=\"card-grid\"> \r\n            {\r\n                imagenes.map((img)=>(\r\n                    <GifGridItem key={ img.id } {...img} /> \r\n                ))\r\n            }  \r\n        </div>\r\n        </>\r\n\r\n    )\r\n}\r\n \r\n\r\nexport default GifGrid;\r\n\r\n","import { useEffect, useState } from 'react';\r\nimport { getGifs } from '../services/getGifs';\r\n\r\nexport const useFetchGif = (category)=>{\r\n\r\n    const [state, setState] = useState({\r\n        data:[],\r\n        loading:true\r\n    });\r\n\r\n    useEffect( ()=>{\r\n        getGifs(category).then( (gifs)=>{\r\n            setState({\r\n                data:gifs,\r\n                loading:false\r\n            });   \r\n        })\r\n    }, [ category ]);\r\n\r\n    return state;\r\n\r\n}","import React, { useState } from 'react';\r\nimport AddCategory from '../src/components/AddCategory.js';\r\nimport GifGrid from '../src/components/GifGrid.js';\r\n \r\nconst GifExpertApp = ()=>{\r\n\r\n    const [categorias, setCategorias] = useState(['Dragon Ball'])\r\n    return (\r\n       <div>\r\n           <h2>Gif Expert App</h2>\r\n           {/* agregando un componente */}\r\n           <AddCategory  setCategories = {setCategorias} />\r\n           <hr/>       \r\n           <ol>\r\n                {\r\n                    categorias.map((cat)=>( \r\n                         <GifGrid  \r\n                            key= {cat} \r\n                            category = {cat} \r\n                        />\r\n                    ))\r\n                }\r\n           </ol>\r\n       </div>\r\n    )\r\n\r\n}\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';  \n\nReactDOM.render( \n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n \n"],"sourceRoot":""}